<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Peter Wooldridge's Blog - Diabetes</title><link href="https://peterwooldridge.me/" rel="alternate"></link><link href="https://peterwooldridge.me/feeds/diabetes.atom.xml" rel="self"></link><id>https://peterwooldridge.me/</id><updated>2021-02-16T08:35:00+00:00</updated><subtitle>I'm a Data Scientist with Type 1 Diabetes. Most of the time I'll write about one or the other.</subtitle><entry><title>Downloading glucose data from Dexcom using Node-RED</title><link href="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/" rel="alternate"></link><published>2021-02-16T08:35:00+00:00</published><updated>2021-02-16T08:35:00+00:00</updated><author><name>Peter Wooldridge</name></author><id>tag:peterwooldridge.me,2021-02-16:/posts/2021/Feb/16/dexcom-download-pt1/</id><summary type="html">&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red.png" alt="Drawing" width="30%"/&gt;
  &lt;/p&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/dexcom.png" alt="Drawing" width="30%"/&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;I've been using the Dexcom continuous glucose monitors for about 4 years now. The sensor, currently the G6 model, attaches to my body and transmits glucose readings every 5 mins.
The sensor connects directly with the Dexcom smartphone app and then the data is sent to the Dexcom Share Servers â€¦&lt;/p&gt;</summary><content type="html">&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red.png" alt="Drawing" width="30%"/&gt;
  &lt;/p&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/dexcom.png" alt="Drawing" width="30%"/&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;I've been using the Dexcom continuous glucose monitors for about 4 years now. The sensor, currently the G6 model, attaches to my body and transmits glucose readings every 5 mins.
The sensor connects directly with the Dexcom smartphone app and then the data is sent to the Dexcom Share Servers in the cloud.&lt;/p&gt;
&lt;p&gt;Dexcom has a web tool called Clarity which lets you view a report related to your CGM data. Dexcom Clarity is useful for exploring glucose data but, I wanted to start building a local copy of my glucose data to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Have a local backup of all of my glucose readings (Dexcom doesn't offer a download data option and if I change CGM providers I don't want to lose all that useful historic data)&lt;/li&gt;
&lt;li&gt;Build custom visualisations that are more relevant to my day-to-day tracking of my diabetes goals (I hope to show some of these in later posts)&lt;/li&gt;
&lt;li&gt;See how my control has fluctuated over the years (Clarity only lets me view or compare 90 days at a time)&lt;/li&gt;
&lt;li&gt;Combine other data sources so that I can explore how different situations affect my glucose&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Another tool for exploring glucose data is &lt;a class="reference external" href="https://nightscout.github.io/"&gt;Nightscout&lt;/a&gt; which I also use extensively. The reports are really useful; the only issue I have is that mongoDB database used in heroku (the cloud hosting platform) has a free tier limit of 512GB which for me gets filled up every few months forcing me to empty the database periodically - another reason for me wanting to creating a local copy.&lt;/p&gt;
&lt;div class="section" id="the-setup"&gt;
&lt;h2&gt;The Setup&lt;/h2&gt;
&lt;p&gt;The setup I've built uses a Raspberry Pi 4 and a software called &lt;a class="reference external" href="https://nodered.org/"&gt;Node-RED&lt;/a&gt; which comes pre-installed with Raspian. Node-RED is a low-code environment for events driven applications. There are loads of amazing applications of what can be done with this technology.&lt;/p&gt;
&lt;p&gt;For this project, I created a simple &lt;cite&gt;flow&lt;/cite&gt; in Node-RED that runs a few http requests to authenticate with the Dexcom servers, query my glucose and then finally puts results into a local mysql database running on the pi.&lt;/p&gt;
&lt;p&gt;A &lt;cite&gt;flow&lt;/cite&gt; is composed of a sequence of nodes that run sequentially and each perform a task. The results of each nodes task is fed into the next connected node till the chain is completed.&lt;/p&gt;
&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red-flow.png" alt="Drawing" width="100%" caption="sdfsdf"/&gt;
     &lt;figcaption&gt;How flows look in the Node-RED web interface&lt;/figcaption&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;Node-RED makes it really easy to schedule flows to run on a specific schedule. Since the Dexcom CGMs produce a glucose reading every 5 minutes, I set the flow to query the api every 2.5 minutes to ensure the database was topped up with the latest data.&lt;/p&gt;
&lt;p&gt;Eventually, hosting the database externally from the pi is probably a better idea as the flash storage on the pi is not ideal for backing up data longterm. That said, to get going quickly and start exploring the data, this was perfect.&lt;/p&gt;
&lt;p&gt;For anyone interested in how I built this setup, the following video details the setup step-by-step and, I've also walked through it in the remainder of this post.&lt;/p&gt;
&lt;div class="youtube"&gt;&lt;iframe src="https://www.youtube.com/embed/GRtUX1Wiqfo" width="512" height="320" allowfullscreen seamless frameBorder="0"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The remainder of this guide assumes you have a raspberry pi 4 booted and connected up to a display, and a dexcom account with which to pull glucose data from.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-and-configuring-node-red"&gt;
&lt;h2&gt;Setting up and configuring Node-RED&lt;/h2&gt;
&lt;p&gt;The Raspian operating system comes with Node-RED pre-installed so there's no installation required here. Node-RED can be started by clicking the &lt;cite&gt;Programming&lt;/cite&gt; menu at the top of the screen followed by &lt;cite&gt;Node-RED&lt;/cite&gt;. This will launch Node-RED inside a console.&lt;/p&gt;
&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red-menu.png" alt="Drawing" width="100%"/&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;The console will contain the url that we can access the web interface to Node-RED from. Once I've found the URL in the console, I can navigate to it using a web browser and connect to the web interface.&lt;/p&gt;
&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red-url.png" alt="Drawing" width="100%"/&gt;
     &lt;figcaption&gt;The console showing the Node-RED URL&lt;/figcaption&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;Starting Node-RED from the menu bar is perfectly fine but, if I accidentally close the console then it will stop. I'd recommend running Node-RED as a service, so that if the pi reboots it'll get auto-started and run in the background.&lt;/p&gt;
&lt;p&gt;Run the following in a terminal to setup the service which will auto-start Node-RED after the next reboot:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo systemctl &lt;span class="nb"&gt;enable&lt;/span&gt; nodered.service
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The Node-RED flow I built can be found at the following &lt;a class="reference external" href="https://github.com/pwwooldridge/dexcom-to-db"&gt;github repo&lt;/a&gt;. Flows are defined as json files and my repo contains two: &lt;cite&gt;dexcom-pull-eu.json&lt;/cite&gt; and &lt;cite&gt;dexcom-pull-us.json&lt;/cite&gt; for those in the EU and US respectively (the dexcom servers endpoints are different, but the flows are pretty much the same). The other difference is that I made the EU flow output glucose data in mmol/L and the US one in mg/dL by default.&lt;/p&gt;
&lt;p&gt;To import the flow into Node-RED you can copy and paste the JSON file to the clipboard and then inside the node-RED web interface, press &lt;cite&gt;Ctrl-i&lt;/cite&gt; to open up the import flow panel and paste your flow right in.&lt;/p&gt;
&lt;p&gt;After the flow is imported, you should see the nodes appear on the canvas. The next thing we need to do is install a couple of extra nodes that I've made use of. Click the 3 horizontal bars in the top right of the Node-RED interface, click &lt;cite&gt;manage palette&lt;/cite&gt; and then navigate to the &lt;cite&gt;install&lt;/cite&gt; tab. The two nodes that need to be installed are &lt;cite&gt;node-red-contrib-credentials&lt;/cite&gt; and &lt;cite&gt;node-red-node-mysql&lt;/cite&gt;. Go ahead and type these into the search, find the packages and install them at which point you should see the dashed lines around the outsides of the mysql and credentials nodes fill in on your canvas.&lt;/p&gt;
&lt;p&gt;I also made use of an additional nodejs library &lt;cite&gt;sql-template-strings&lt;/cite&gt; from inside this flow so I need to install this using npm. To do this, head out of Node-RED and open up a terminal from the &lt;cite&gt;Programming&lt;/cite&gt; menu in Raspian. Once you have a terminal open, run the following commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/.node-red
npm install sql-template-strings
nano settings.js
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The last command will open up a nano text editor that allows you to edit the Node-RED settings file. Once in the settings.js file, scroll down until you see a section like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;functionGlobalContext&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// os:require(&amp;#39;os&amp;#39;),&lt;/span&gt;
    &lt;span class="c1"&gt;// jfive:require(&amp;quot;johnny-five&amp;quot;),&lt;/span&gt;
    &lt;span class="c1"&gt;// j5board:require(&amp;quot;johnny-five&amp;quot;).Board({repl:false})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;modify it to looks as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;functionGlobalContext&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;sqlModule&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="nx"&gt;require&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;sql-template-strings&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="c1"&gt;// os:require(&amp;#39;os&amp;#39;),&lt;/span&gt;
    &lt;span class="c1"&gt;// jfive:require(&amp;quot;johnny-five&amp;quot;),&lt;/span&gt;
    &lt;span class="c1"&gt;// j5board:require(&amp;quot;johnny-five&amp;quot;).Board({repl:false})&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Press &lt;cite&gt;Ctrl+x&lt;/cite&gt; to save and come out of nano. To make the setting updates take effect, we need to restart Node-RED which can be done in the terminal as follows:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo service node-red restart
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="setting-up-mysql"&gt;
&lt;h2&gt;Setting up mysql&lt;/h2&gt;
&lt;p&gt;Now we're ready to get our database setup. Note: In Raspian, MariaDB is used as a drop-in replacement to MySQL. All MySQL commands should still work with MariaDB.&lt;/p&gt;
&lt;p&gt;We can use the terminal we used earlier to install and configure the database. The first step is to check for any package updates, by running the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above may take a while depending on how many updates are needed. After the updates have completed, we're ready to install MariaDB/MySQL with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo apt-get install mariadb-server
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the database is installed the next step is database configuration which involves setting a root password for the database. To start configuration wizard, run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mysql_secure_installation
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code&gt;mysql_secure_installation&lt;/code&gt; will first ask you to set a root password which has to be input twice. For the remaining questions I did:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Press &lt;code&gt;Y&lt;/code&gt; to remove anonymous users.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Y&lt;/code&gt; to disallow root login remotely.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Y&lt;/code&gt; to remove test database and user.&lt;/li&gt;
&lt;li&gt;Press &lt;code&gt;Y&lt;/code&gt; to reload privilege tables. (last step)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;and we're done. We've now set the root password for connecting to our database.&lt;/p&gt;
&lt;p&gt;To be able to login with the password we just set, I had to change the database plugin from auth_socket to mysql_native_password. To do this, connect to the MySQL shell using &lt;code&gt;sudo mysql -u root&lt;/code&gt;, then run the following to switch the plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;USE&lt;/span&gt; &lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;UPDATE&lt;/span&gt; &lt;span class="k"&gt;user&lt;/span&gt; &lt;span class="k"&gt;SET&lt;/span&gt; &lt;span class="n"&gt;plugin&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mysql_native_password&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;WHERE&lt;/span&gt; &lt;span class="k"&gt;User&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;root&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;FLUSH&lt;/span&gt; &lt;span class="k"&gt;PRIVILEGES&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In order to make the settings take effect, restart MySQL by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo service mysql restart
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we can connect to our database by using the following command (you'll be required to enter your root password):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;mysql -u root -p
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The above command connects to the mysql database using the command line and allows us to run commands from the prompt directly on the database.&lt;/p&gt;
&lt;p&gt;We can use the mysql command line tool to create the database and tables to store the glucose data. First I'll create a database in mysql called &lt;code&gt;glucose&lt;/code&gt; and then connect to it.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;database&lt;/span&gt; &lt;span class="n"&gt;glucose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;glucose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once connected, I can create a table to store my glucose data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="k"&gt;table&lt;/span&gt; &lt;span class="n"&gt;glucose&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="n"&gt;date_string&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt; &lt;span class="k"&gt;primary&lt;/span&gt; &lt;span class="k"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;     &lt;span class="n"&gt;direction&lt;/span&gt; &lt;span class="nb"&gt;text&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once I've executed this, I can press &lt;cite&gt;Ctrl-d&lt;/cite&gt; to exit from the mysql command line and head back to the node-RED web ui for the final setup part.&lt;/p&gt;
&lt;p&gt;Okay, we're nearly up and running. Final 3 small bits of setup to do back in Node-RED. First thing we need to do is add our dexcom &lt;cite&gt;accountId&lt;/cite&gt; and &lt;cite&gt;password&lt;/cite&gt; into the credentials node so that Node-RED can authenticate with dexcom. To do this, double click on the node called &lt;cite&gt;credentials&lt;/cite&gt; in your flow and type in your accountId and password.&lt;/p&gt;
&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/16/dexcom-download-pt1/node-red-credentials.png" alt="Drawing" width="100%"/&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;p&gt;Next, double click on the orange mysql node called &lt;cite&gt;diabetes&lt;/cite&gt;. Similar to the credentials node setup, double click the node, add &amp;quot;root&amp;quot; as the database user and for the password, use the one you setup in the database setup. For the database put &amp;quot;diabetes&amp;quot;. Click done.&lt;/p&gt;
&lt;p&gt;The final piece of setup involves setting up the flow to run on a regular repeating schedule. To do this, double click on the blue inject node on the very left-hand side of the flow - the name is usually &amp;quot;timestamp&amp;quot;. Double click it and ensure the &amp;quot;Inject once after&amp;quot; box is unticked and then in the repeat dropdown choose interval and make the frequency 150 seconds. Click done to close the dialog and click the red deploy button in the top right.&lt;/p&gt;
&lt;p&gt;The deploy button will launch our flow. Assuming there are no issues upon launching it will continue to run, till we say otherwise. If we've configured everything correctly, we should see in a few minutes time records appearing in the database. Inside the mysql command line, we can check how many records have been created by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;use&lt;/span&gt; &lt;span class="n"&gt;diabetes&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;mysql&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="k"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;from&lt;/span&gt; &lt;span class="n"&gt;glucose&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should return a number, hopefully greater than zero, indicating that glucose records are being synced into the database and WE ARE DONE!&lt;/p&gt;
&lt;p&gt;Thanks for reading this far! If you try to set this setup up yourself, check out the video where I go into a bit more detail on testing the flow as I go.&lt;/p&gt;
&lt;/div&gt;
</content></entry><entry><title>A serious rethink on carbs taught to me by Mastering Diabetes</title><link href="https://peterwooldridge.me/posts/2021/Feb/09/carbs-rethink/" rel="alternate"></link><published>2021-02-09T17:40:00+00:00</published><updated>2021-02-09T17:40:00+00:00</updated><author><name>Peter Wooldridge</name></author><id>tag:peterwooldridge.me,2021-02-09:/posts/2021/Feb/09/carbs-rethink/</id><summary type="html">&lt;p&gt;I've observed the pattern so many thousands of times:
eating high carb foods cause the biggest fluctuations in my post-meal glucose.
Therefore, high carbs are problematic and best avoided. This is the deeply ingrained mental model
I've been working with for the last 25 years to manage my type 1 â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've observed the pattern so many thousands of times:
eating high carb foods cause the biggest fluctuations in my post-meal glucose.
Therefore, high carbs are problematic and best avoided. This is the deeply ingrained mental model
I've been working with for the last 25 years to manage my type 1 diabetes. How could this be wrong?&lt;/p&gt;
&lt;p&gt;Well, owing to some extra free time over lockdown, I came across the Mastering Diabetes book.&lt;/p&gt;
&lt;p&gt;I've had so many aha moments reading this and relating the evidenced based approaches with my own experience
with T1D. One of the many things I took away was a complete rethink on carbs.&lt;/p&gt;
&lt;embed&gt;
  &lt;p align="center"&gt;
     &lt;img src="https://peterwooldridge.me/posts/2021/Feb/09/carbs-rethink/md_book.jpeg" alt="Drawing" width="60%"/&gt;
  &lt;/p&gt;
&lt;/embed&gt;&lt;div class="line-block"&gt;
&lt;div class="line"&gt;&lt;br /&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It's refreshing to see an approach that goes against the grain of
conventional diabetes wisdom and advocates carbs as the
main dietary component. This appeals to me particularly because I do a lot of endurance sport.
Carbohydrates are necessary for keeping glycogen stores topped up which are called upon to fuel intense workouts.
I've followed a number of low carb approaches in the past and, whilst they gave me great glucose control, they often
left me a little flat on the sharp end of hard workouts.&lt;/p&gt;
&lt;p&gt;The book states that labelling carbs as the enemy has actually given rise to a whole
host of the confusion that we see today around carbs and diabetes.
The carbs story, as detailed in the book, is much more nuanced for two main reasons.&lt;/p&gt;
&lt;p&gt;Firstly, in order to talk meaningfully about carbs it's important
to distinguish between refined and unrefined. Refined carbs are essentially those that have undergone
processing of one kind or another for example removing the bran from a grain and
grinding the grain to make flour. These types of carbs tend to get absorbed very quickly by the body. The opposite
is true of unrefined carbs which are composed of longer chain carbohydrate molecules and release glucose into the bloodstream
much more slowly. Plant foods, the main component of the mastering diabetes approach, are a fantastic source of unrefined carbs.&lt;/p&gt;
&lt;p&gt;The second reason is that high glucose values following a high carb meal are
actually indicative of a state of insulin resistance and not an issue with
carbs themselves. Insulin resistance is a state whereby the body's tissues have
a lower level of response to insulin
meaning glucose cannot be absorbed as efficiently by cells leaving it lingering in the blood.&lt;/p&gt;
&lt;p&gt;Up to this point I've sort of thought that insulin resistance was more of a type 2 diabetes problem
but, as the book clarified, it can and does occur in all types of diabetes.
In fact the mechanisms that bring about insulin resistance are the same regardless
of types of diabetes. Insulin resistance is caused by:&lt;/p&gt;
&lt;p class="center"&gt;&lt;em&gt;The accumulation of fat in tissues that are not designed to store large quantities of fat&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;For type 1's like myself, becoming more sensitive to insulin has the advantage that I need to
take less of the stuff. Less insulin means a smaller margin for error day-to-day and therefore I have
a greater chance of keeping my glucose levels steady.&lt;/p&gt;
&lt;p&gt;Whilst avoiding post meal spikes and generally taking less insulin are good enough reasons for me to work
on become as sensitive as possible to insulin, the other perhaps more important reason is
because insulin resistance is the cause of whole
host of diabetes complications - basically you name it, it's there.&lt;/p&gt;
&lt;p&gt;The Mastering Diabetes approach consists of
a 5-pillar approach to maximising insulin sensitivity. I won't go into all 5 elements in
this post but the first is adopting a low-fat plant based diet which, if the references are to go by,
seems to be the biggest bang for your buck when trying to reverse insulin resistance. I first started following
the diet during the summer and could not quite believe how much more effective my insulin became!&lt;/p&gt;
&lt;p&gt;Another huge eye opener for me in the book was the idea that tight glucose control alone
is not sufficient alone to minimise risk of future complications.
Research such as &lt;a class="reference external" href="https://care.diabetesjournals.org/content/26/5/1374"&gt;this&lt;/a&gt;
paper, referenced in the book, concluded in a study of 603 type 1 patients that insulin resistance
was a better predictor of future coronary artery disease than glucose control!&lt;/p&gt;
&lt;p&gt;I've spent the best part
of 25 years fixating on HBA1Cs as my overarching success metric when it comes to my diabetes.
Whilst long term glucose control is and always will be super important,
the book helped me open my perspectives and not over fixate on a single dimension of health.&lt;/p&gt;
&lt;p&gt;I really love the evidenced based approach Cyrus and Robby have taken with this book. I've just
enrolled in their online coaching course so expect more posts on this topic soon. In the meantime, I'd
encourage anyone with diabetes to read this, it taught me so many things and perhaps
more importantly caused me to challenge a few of my ingrained assumptions, not least around carbs.&lt;/p&gt;
</content></entry></feed>